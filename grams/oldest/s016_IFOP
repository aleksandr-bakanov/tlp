NON-TERMINALS: [COP, IFOP, LEXP, OCOP, OP]
TERMINALS:     [_else, _if, _then]
START SYMBOL:  IFOP
     RULES:
(0) IFOP -> _if LEXP _then OCOP
(1) IFOP -> _if LEXP _then OCOP _else OCOP
(2) OCOP -> COP
(3) OCOP -> OP
Грамматика операторного предшествования
Таблица переноса и свертки
                                        |    €   
----------------------------------------+---------
      # [_if, IFOP, _then, IFOP]        | 0, IFOP
----------------------------------------+---------
# [_if, IFOP, _then, IFOP, _else, IFOP] | 1, IFOP

           | _else | _if | _then | $
-----------+-------+-----+-------+---
[_else, C] |       |     |       | R
-----------+-------+-----+-------+---
 [_if, C]  |       |     |   S   |  
-----------+-------+-----+-------+---
[_then, C] |   S   |     |       | R
-----------+-------+-----+-------+---
   [#]     |       |  S  |       |  
-----------+-------+-----+-------+---
[#, IFOP]  |       |  S  |       | A

Отношения предшествования
      | _else | _if  | _then |  $  
------+-------+------+-------+------
_else |       |      |       | [.>]
------+-------+------+-------+------
 _if  |       |      | [=.]  |     
------+-------+------+-------+------
_then | [=.]  |      |       | [.>]
------+-------+------+-------+------
  #   |       | [<.] |       |     
