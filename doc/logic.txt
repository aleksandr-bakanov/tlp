
	=	искать токен в терминалах грамматик
	=	поиск по таблице переходов
		=	если не найдено, то поиск текущего токена в терминалах
		=	если перенос, то перенос в стек
		=	если допуск, то возврат к предыдущей грамматике
		=	если свертка, то поиск по таблице свертки
			=	все нетерминалы заменяются одним начальным
			=	сравнение сверток со стеком
			=	применение правил
		=	если ошибка, то завершение программы
		
Структуры данных:
	стек используемых грамматик
	стек токенов текущей грамматики - ??? или указатель на элемент в общем стеке для каждой грамматики
	стек примененных правил из грамматик
		
1. начинается все с первой грамматики
	1.1. рассмотрение токена из входной последовательности
		1.1.1. поиск по таблице переходов (сначала надо убедится, что рассматриваемый токен есть в данной грамматике)
			если перенос, то переносим токен из входной последовательности в стек
			если свертка, то переходим к поиску по таблице свертки
				сравниваем левую часть таблицы со стеком
					при нахождении совпадения, заменяем то что в [...] на начальный нетерминал грамматики, запоминаем номер грамматики и номер правила (нужно будет для построения дерева)
			если допуск
				если в начальной грамматике, то РАДУЕМСЯ и ПЛАЧЕМ	
				если нет, то возвращаемся к предыдущей грамматике c переносом последнего нетерминала в стек предыдущей грамматики, заменяя его на начальный нетерминал предыдущей грамматики
			если ошибка, то ПОССЫЛАЕМ ОТСЮДА
		1.1.2. (Переход к другой грамматике) хитрый рекурсивный поиск токена в грамматиках, у которых начальный нетерминал входит во вможество нетерминалов текущей грамматики
			если найден, то переходим к этой грамматике (новый стек для грамматики) и к пункту 1.1.
			иначе ПОССЫЛАЕМ ОТСЮДА
		
		
		
		
		
		
Примеры:
	//
	_begin _len ( _id ) ; _end .
	//
	g0
	#
	-> g15
	#
	# _begin
	
	
	
	
-------------------------------------------------
	//
	_LEN (_ID)
	//
	G0
	#
	-> G18 (т.к. там найден _LEN)
	#
	# _LEN
	# _LEN (
	-> G6 (т.к. там найден _ID)
	#
	# _ID
	# ID
	Accept
	<- G18
	# _LEN ( ID
	# _LEN ( ID )
	# LENOP
	Accept
	<- G0
	# LENOP --- по алгоритму простого поиска токенов пройдет, а не должно
	
---------------------------------------------
	
	